generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int              @id @default(autoincrement())
  email           String           @unique
  password        String
  name            String
  createdAt       DateTime         @default(now())
  role            Role             @default(CUSTOMER)
  messages        Message[]
  Ticket          Ticket[]         @relation("CustomerTickets")
  assignedTickets TicketAssignee[]
}

model Ticket {
  id         Int              @id @default(autoincrement())
  autoGenId  String           @unique 
  subject    String
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
  status     TicketStatus     @default(OPEN)
  customerId Int
  messages   Message[]
  customer   User             @relation("CustomerTickets", fields: [customerId], references: [id])
  assignees  TicketAssignee[]

  @@index([customerId], map: "Ticket_customerId_fkey")
}

model TicketAssignee {
  id       Int    @id @default(autoincrement())
  ticketId Int
  adminId  Int
  admin    User   @relation(fields: [adminId], references: [id])
  ticket   Ticket @relation(fields: [ticketId], references: [id])

  @@unique([ticketId, adminId])
  @@index([adminId], map: "TicketAssignee_adminId_fkey")
}

model Message {
  id        Int      @id @default(autoincrement())
    message   String   @db.Text   // Change this from String to TEXT
  createdAt DateTime @default(now())
  ticketId  Int
  userId    Int
  ticket    Ticket   @relation(fields: [ticketId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  @@index([ticketId], map: "Message_ticketId_fkey")
  @@index([userId], map: "Message_userId_fkey")
}

enum Role {
  ADMIN
  CUSTOMER
}

enum TicketStatus {
  OPEN
  SOLVED
  CLOSED
}

